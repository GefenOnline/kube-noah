# ------
#  RBAC
# ------
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: kube-noah
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
  - kind: ServiceAccount
    name: kube-noah
    namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kube-noah
  namespace: kube-system

# -----------
# Restore job
# -----------
---
apiVersion: batch/v1
kind: Job
metadata:
  name: kube-noah
  namespace: kube-system
  labels:
    app: kube-noah
spec:
  backoffLimit: 0
  template:
    spec:
      serviceAccountName: kube-noah
      restartPolicy: Never
      containers:
      - name: kube-noah
        image: gefenonline/kube-noah
        env:
        - name: RESTORE
          value: 'true'
        - name: GIT_REPO_URL
          valueFrom:
            secretKeyRef:
              name: env-vars
              key: KUBE_ARK_REPO_URL
        - name: KUBE_CLUSTER_NAME
          valueFrom:
            secretKeyRef:
              name: env-vars
              key: KUBE_CLUSTER_NAME

# ---------------
# Backup Cron Job
# ---------------
---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: kube-noah
  namespace: kube-system
  labels:
    app: kube-noah
spec:
#  schedule: "*/5 * * * *"
  schedule: "* * * * *"
  jobTemplate:
    spec:
      template:
        spec:
          serviceAccountName: kube-noah
          restartPolicy: OnFailure
          containers:
          - name: kube-noah
            image: gefenonline/kube-noah
            env:
            - name: BACKUP
              value: 'true'
            - name: GIT_REPO_URL
              valueFrom:
                secretKeyRef:
                  name: env-vars
                  key: KUBE_ARK_REPO_URL
            - name: KUBE_CLUSTER_NAME
              valueFrom:
                secretKeyRef:
                  name: env-vars
                  key: KUBE_CLUSTER_NAME
